# Generated by Django 5.0.6 on 2024-06-01 12:42

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BarkNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='名称')),
                ('enable', models.BooleanField(default=False, verbose_name='开启')),
                ('server', models.URLField(default='https://api.day.app', help_text='https:// 或者 http:// 开头', verbose_name='服务器地址')),
                ('device_id', models.CharField(max_length=64, verbose_name='设备ID')),
                ('level', models.CharField(blank=True, choices=[('active', '系统会立即亮屏显示通知'), ('timeSensitive', '时效性通知，可在专注状态下显示通知'), ('passive', '仅将通知添加到通知列表，不会亮屏提醒')], default='active', max_length=32, null=True, verbose_name='推送中断级别')),
                ('badge', models.PositiveSmallIntegerField(blank=True, help_text='推送角标，可以是任意数字', null=True, verbose_name='角标')),
                ('sound', models.CharField(blank=True, help_text='可以为推送设置不同的铃声', max_length=32, null=True, verbose_name='铃声')),
                ('icon', models.URLField(blank=True, help_text='为推送设置自定义图标，设置的图标将替换默认Bark图标。图标会自动缓存在本机，相同的图标 URL 仅下载一次。', null=True, verbose_name='图标')),
                ('group', models.CharField(blank=True, help_text='对消息进行分组，推送将按group分组显示在通知中心中。也可在历史消息列表中选择查看不同的群组。', max_length=32, null=True, verbose_name='群组')),
                ('is_archive', models.CharField(blank=True, help_text='传 1 保存推送，传其他的不保存推送，不传按APP内设置来决定是否保存。', max_length=32, null=True, verbose_name='是否保存')),
                ('url', models.URLField(blank=True, help_text='点击推送时，跳转的URL ，支持URL Scheme 和 Universal Link', null=True, verbose_name='跳转链接')),
            ],
            options={
                'verbose_name': 'Bark',
                'verbose_name_plural': 'Bark',
            },
        ),
        migrations.CreateModel(
            name='PushDeerNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='名称')),
                ('enable', models.BooleanField(default=False, verbose_name='开启')),
                ('server', models.URLField(default='https://api2.pushdeer.com', help_text='https:// 或者 http:// 开头', verbose_name='服务器地址')),
                ('push_key', models.CharField(max_length=128, verbose_name='PushKey')),
            ],
            options={
                'verbose_name': 'PushDeer',
                'verbose_name_plural': 'PushDeer',
            },
        ),
        migrations.CreateModel(
            name='ServerChanNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='名称')),
                ('enable', models.BooleanField(default=False, verbose_name='开启')),
            ],
            options={
                'verbose_name': 'server酱',
                'verbose_name_plural': 'server酱',
            },
        ),
    ]
